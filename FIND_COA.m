%%%%%%%%%%%%%%%%%%%%
%%%              %%%
%%%   FIND COA   %%%
%%%              %%%
%%%%%%%%%%%%%%%%%%%%
 
function [ COA_NODE_LIST, END_CHECK, ROUTE_LIST ] = FIND_COA( COA_NODE_LIST, NODE_NUM, ROUTE_LIST, EN, FR )

global LAT LON Z REF_MATRIX EN_FOV FUP_RANGE ROUTE_WEIGHT FUP_WEIGHT

ROUTE_DETAILS = struct( 'ROUTE', [] );

% Determine FUPs
[ FUP_QV_MATRIX ] = TASK05_FUP_QV( LAT, LON, Z, REF_MATRIX, EN_FOV, COA_NODE_LIST(NODE_NUM).EN.LAT, COA_NODE_LIST(NODE_NUM).EN.LON, FUP_RANGE, COA_NODE_LIST(NODE_NUM).FR(3).LAT, COA_NODE_LIST(NODE_NUM).FR(3).LON, FUP_WEIGHT.EN_FOV, FUP_WEIGHT.ANGLE, FUP_WEIGHT.POSITION, FUP_WEIGHT.LENGTH, FUP_WEIGHT.DISTANCE );
[ FULL_FUP_LIST ] = TASK07_IDENTIFY_FUPS( FUP_QV_MATRIX );
[ FUP_LIST ] = TASK34_IDENTIFY_LEFT_RIGHT_FUPS( FULL_FUP_LIST, COA_NODE_LIST(NODE_NUM).FR, COA_NODE_LIST(NODE_NUM).EN, LAT, LON );
[ FUP_QV_MATRIX ] = TASK05_FUP_QV( LAT, LON, Z, REF_MATRIX, EN_FOV, COA_NODE_LIST(NODE_NUM).EN.LAT, COA_NODE_LIST(NODE_NUM).EN.LON, FUP_RANGE, COA_NODE_LIST(NODE_NUM).FR(3).LAT, COA_NODE_LIST(NODE_NUM).FR(3).LON, FUP_WEIGHT.EN_FOV, FUP_WEIGHT.ANGLE, FUP_WEIGHT.POSITION, FUP_WEIGHT.LENGTH, FUP_WEIGHT.DISTANCE );


% For each FUP
[ FUP_NUM, ~, ~ ] = size( FUP_LIST );
for FUP = 1 : FUP_NUM
    
    END_CHECK = 0;
    
    % Enter Calculate Route
    [ START_ROW, START_COL ] = setpostn( Z, REF_MATRIX, COA_NODE_LIST(NODE_NUM).FR(1).LAT, COA_NODE_LIST(NODE_NUM).FR(1).LON );
    [ NODE_LIST ] = TASK10_CALCULATE_ROUTE_1( START_ROW, START_COL, FUP_LIST( FUP_NUM, 1, 1 ), FUP_LIST( FUP_NUM, 2, 1 ), QF_MAP, LAT, LON, ROUTE_WEIGHT.LENGTH, Z );
    % NEED TO RECALCULATE THE DISTANCES IN THE FINAL NODE LIST ONCE
    % THE FINAL ROUTE HAS BEEN DETERMINED.
    
    ROUTE_DETAILS.ROUTE = NODE_LIST;
    ROUTE_LIST = cat( 1, ROUTE_LIST, ROUTE_DETAILS );
    
    [ COA_NODE, END_CHECK ] = FIND_NODE( ROUTE_LIST );
    
    [ COA_NODE_LIST ] = cat( 1, COA_NODE_LIST, COA_NODE );
    if END_CHECK == 1
        continue
    end
    
    
end
    
    % Concatenate COA Node onto COA Node List
    
    % if FUP checkbit is checked, insert QV into node

end

end
